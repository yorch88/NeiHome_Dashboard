FRONTEND:
    To run existent reactjs project.
        update node and next latest version.
            - Download msi installer for node js https://nodejs.org/en/download/current
            - npm install next@latest react@latest react-dom@latest
	    - npm install react-device-detect --save	
        npm uninstall next
        npm install next
        npm install axios
        npm run build

    To run frontend server
        npm run start
        


BACKEND:
    python -m pip install Django
    pip install djangorestframework
    pip install environs
    pip install django-cors-headers
    python .\manage.py makemigrations
    python .\manage.py migrate 

    to run backend server
        python .\manage.py runserver

FOR ANDROID CAPACITOR WEB TO MOBILE
First, go to the root of your existing react app and create a file capacitor.config.json and inside that put the below code.
{
  "appId": "io.ionic.nameofyourapp",
  "appName": "nameofyourapp",
  "bundledWebRuntime": false,
  "npmClient": "npm",
  "webDir": "build",
  "cordova": {}
}
2. Now create another file name ionic.config.json and inside that insert the below code.

{
  "name": "nameofyourapp",
  "integrations": {
    "capacitor": {}
  },
  "type": "react"
}
Note: replace nameofyourapp in both files with the name of your app.

3. Now we need to build our react project. To build your react app open your terminal to the root of the project and run the below-mentioned command

npm run build
Note: this will create the build folder in your root project and the name of the folder should match the webDir name inside capacitor.config.json file.

4. Now we will install ionic globally in our machine. To install ionic globally in your machine open your terminal and run the below command.

npm install -g @ionic/cli
5. Now install the capacitor core in our project.

npm install @capacitor/core --save
6. Now install the capacitor CLI.

npm i -D @capacitor/cli
7. After that, we will first create an android app with our existing react app.

ionic capacitor add android
This will create the android folder in your root project and install all the required dependencies.

8. Now run the below command to launch your android project on Android Studio.

npx cap sync
ionic capacitor sync android
npx cap open android

Wait some time and then it will ask you to update the Gradle. Just update the Gradle to the latest version and run the project in the emulator. You can also connect your mobile to run the project live on your mobile phone.

9. Now open the build menu from the android studio and build your apk file.